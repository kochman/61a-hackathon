A chat program that runs as a Tor hidden service. Clients connect to the hidden service anonymously.

## Design

class ChatClient:
	"""In charge of sending and receiving messages from a ChatServer
	(over the network or locally or however).

	Uses asyncio and Tor (Stem) stuff probably.
	"""

	def __init__(self, server_address)

	def send_message(self, message)
	"""Sends a ChatMessage."""

	def get_messages(self):
	"""Returns a list of all known ChatMessages."""

class ChatWebInterface:
	"""Runs a local web server that displays a chat interface.
	Hands new messages off to a ChatClient and checks for new messages too.
	"""

class ChatMessage:
	"""Represents a message sent or received by an instance of ChatServer."""

	def __init__(self, msg, sender, date=datetime.datetime.now())

class ChatServer:
	"""Receives messages from ChatBrokers and distributes them.
	
	Uses asyncio and Tor (Stem) stuff probably.
	"""
